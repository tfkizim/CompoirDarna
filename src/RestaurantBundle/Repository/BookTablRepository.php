<?php

namespace RestaurantBundle\Repository;

/**
 * BookTablRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookTablRepository extends \Doctrine\ORM\EntityRepository
{
    public function SearchForDuplicata($table,$book){
        $today=$book->getDateBook()->format("Y-m-d")." 05:00:00";
        $tomorrow=new \DateTime($today);
        $tomorrow->add(new \DateInterval('P1D'));

        $qb= $this->getEntityManager()->createQuery('
            SELECT bt
            FROM RestaurantBundle\Entity\BookTabl bt,RestaurantBundle\Entity\Book b
            WHERE bt.bookId=b.id and bt.tablId = :tableid and bt.bookId!= :bookid and b.dateBook BETWEEN :today and :tomorrow
            ')
            ->setParameter('tableid', $table->getId())
            ->setParameter('bookid', $book->getId())
            ->setParameter('today', $today)
            ->setParameter('tomorrow', $tomorrow);
        return $qb->getResult();
    }
    public function SearchForDuplicataWithDate($table,$date){
        $today=new \DateTime($date);
        $today=$today->format("Y-m-d")." 05:00:00";
        $tomorrow=new \DateTime($today);
        $tomorrow->add(new \DateInterval('P1D'));

        $qb= $this->getEntityManager()->createQuery('
            SELECT bt
            FROM RestaurantBundle\Entity\BookTabl bt,RestaurantBundle\Entity\Book b
            WHERE bt.bookId=b.id and bt.tablId = :tableid and b.dateBook BETWEEN :today and :tomorrow
            ')
            ->setParameter('tableid', $table->getId())
            ->setParameter('today', $today)
            ->setParameter('tomorrow', $tomorrow);
        return $qb->getResult();
    }
    public function SearchForDuplicataWithDateAndBook($table,$date,$book){
        $today=new \DateTime($date);
        $today=$today->format("Y-m-d")." 05:00:00";
        $tomorrow=new \DateTime($today);
        $tomorrow->add(new \DateInterval('P1D'));

        $qb= $this->getEntityManager()->createQuery('
            SELECT bt
            FROM RestaurantBundle\Entity\BookTabl bt,RestaurantBundle\Entity\Book b
            WHERE bt.bookId=b.id and bt.tablId = :tableid and bt.bookId!= :bookid and b.dateBook BETWEEN :today and :tomorrow
            ')
            ->setParameter('tableid', $table->getId())
            ->setParameter('bookid', $book->getId())
            ->setParameter('today', $today)
            ->setParameter('tomorrow', $tomorrow);
        return $qb->getResult();
    }
}
